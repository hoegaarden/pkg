apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: prom-proxy.hoegaarden.github.io.0.0.1
spec:
  refName: prom-proxy.hoegaarden.github.io
  version: 0.0.1
  releasedAt: "2022-06-13T09:56:11+02:00"
  licenses:
  - none
  template:
    spec:
      fetch:
      - git:
          ref: prom-proxy@0.0.1
          url: https://github.com/hoegaarden/pkg
          subPath: pkgs/prom-proxy/src
      template:
      - ytt:
          paths:
          - ./
      deploy:
      - kapp: {}
  valuesSchema:
    openAPIv3:
      type: object
      additionalProperties: false
      properties:
        upstream:
          title: Upstream
          type: string
          description: Where is the prometheus we want to front with this proxy?
          x-example-description: expose prometheus from a different namespace
          example: http://prom.monitoring.svc.cluster.local:80/
          default: http://prometheus-server:80/
        replicas:
          title: Replicas
          type: integer
          description: How many replicase of this proxy do you want to run?
          default: 1
        ingress:
          title: Ingress Settings
          type: object
          additionalProperties: false
          nullable: true
          description: Do you want to deploy ingress infra to get traffic into the proxy, or do you deploy that out of band?
          properties:
            type:
              title: Ingress Type
              type: string
              description: |-
                Which ingress type to use?

                Currently supported:
                - contour
                - ingress
              x-example-description: Use the 'default' ingress type
              example: ingress
              default: ingress
            fqdn:
              title: FQDN
              type: string
              description: |-
                Which resource requests & limits to apply to the proxy

                You can specify multiple user/password pairs.
                Password hashes can be generated by e.g. `openssl passwd -apr1 admin`
              x-example-description: expose the proxy as prom.example.tld
              example: prom.example.tld
              default: ""
            tls:
              title: TLS settings
              type: object
              additionalProperties: false
              description: Everything about the certificate that should be used to expose the proxy.
              properties:
                secretName:
                  title: TLS secret name
                  type: string
                  description: The name of the secret in the cluster which holds the TLS certificate
                  default: prom-proxy-tls
                inline:
                  title: TLS cert data
                  type: object
                  additionalProperties: false
                  nullable: true
                  description: |-
                    Provide the certificate data inline by providing the cert and the key, in PEM encoded format.

                    If both the cert and the key are specified, a secret will be deployed, otherwise the assumption is, that a secret with the cert is managed by other systems/manually.
                  x-example-description: The cert parts in PEM format
                  example:
                    cert: |-
                      -----BEGIN CERTIFICATE-----
                      ...
                      -----END CERTIFICATE-----
                    key: |-
                      -----BEGIN RSA PRIVATE KEY-----
                      ...
                      -----END RSA PRIVATE KEY-----
                  properties:
                    cert:
                      type: string
                      default: ""
                    key:
                      type: string
                      default: ""
        image:
          title: Container image
          type: string
          description: Which container image should be used to run the proxy?
          default: nginxinc/nginx-unprivileged
        htpasswd:
          title: Basic-auth users/password list
          type: string
          description: |-
            Which resource requests & limits to apply to the proxy

            You can specify multiple user/password pairs.
            Password hashes can be generated by e.g. `openssl passwd -apr1 admin`
          x-example-description: 'Deploy a htpasswd file for 2 user/passwod pairs: admin/adminpass & user1/userpass'
          example: |-
            admin:$apr1$SXNCXvAE$W89gtOYLfrq6dTsOXvtPM.
            user1:$apr1$Kf4PgAGq$EBbMAnEWIKwoOn854/z9C.
          default: ""
        resources:
          title: Resources
          nullable: true
          description: Which resource requests & limits to apply to the proxy
          default:
            limits:
              memory: 50Mi
              cpu: 50m
            requests:
              memory: 30Mi
              cpu: 50m
